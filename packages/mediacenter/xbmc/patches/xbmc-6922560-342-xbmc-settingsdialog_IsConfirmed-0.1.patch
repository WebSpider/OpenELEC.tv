diff --git a/xbmc/addons/GUIDialogAddonSettings.cpp b/xbmc/addons/GUIDialogAddonSettings.cpp
index 8bfbce7..587fc6d 100644
--- a/xbmc/addons/GUIDialogAddonSettings.cpp
+++ b/xbmc/addons/GUIDialogAddonSettings.cpp
@@ -180,7 +180,7 @@ void CGUIDialogAddonSettings::OnInitWindow()
 }
 
 // \brief Show CGUIDialogOK dialog, then wait for user to dismiss it.
-bool CGUIDialogAddonSettings::ShowAndGetInput(const AddonPtr &addon, bool saveToDisk /* = true */)
+bool CGUIDialogAddonSettings::ShowAndGetInput(const AddonPtr &addon, bool saveToDisk /* = true */, bool* confirmed /*= NULL*/)
 {
   if (!addon)
     return false;
@@ -203,6 +203,7 @@ bool CGUIDialogAddonSettings::ShowAndGetInput(const AddonPtr &addon, bool saveTo
     pDialog->m_addon = addon;
     pDialog->m_saveToDisk = saveToDisk;
     pDialog->DoModal();
+    if (confirmed) *confirmed=pDialog->IsConfirmed();
     ret = true;
   }
   else
diff --git a/xbmc/addons/GUIDialogAddonSettings.h b/xbmc/addons/GUIDialogAddonSettings.h
index 4483e9c..1e0d3bb 100644
--- a/xbmc/addons/GUIDialogAddonSettings.h
+++ b/xbmc/addons/GUIDialogAddonSettings.h
@@ -35,7 +35,7 @@ public:
    \param saveToDisk whether the changes should be saved to disk or just made local to the addon.  Defaults to true
    \return true if settings were changed and the dialog confirmed, false otherwise.
    */
-  static bool ShowAndGetInput(const ADDON::AddonPtr &addon, bool saveToDisk = true);
+  static bool ShowAndGetInput(const ADDON::AddonPtr &addon, bool saveToDisk = true, bool* confirmed = NULL);
   virtual void DoProcess(unsigned int currentTime, CDirtyRegionList &dirtyregions);
 
   CStdString GetCurrentID() const;
diff --git a/xbmc/interfaces/python/xbmcmodule/PythonAddon.cpp b/xbmc/interfaces/python/xbmcmodule/PythonAddon.cpp
index 2159d25..210d7e4 100644
--- a/xbmc/interfaces/python/xbmcmodule/PythonAddon.cpp
+++ b/xbmc/interfaces/python/xbmcmodule/PythonAddon.cpp
@@ -285,11 +285,11 @@ namespace PYXBMC
     // show settings dialog
     AddonPtr addon(self->pAddon);
     CPyThreadState pyState;
-    CGUIDialogAddonSettings::ShowAndGetInput(addon);
+    bool bResult;
+    CGUIDialogAddonSettings::ShowAndGetInput(addon, true, &bResult);
     pyState.Restore();
 
-    Py_INCREF(Py_None);
-    return Py_None;
+    return Py_BuildValue((char*)"b", bResult);
   }
 
   PyDoc_STRVAR(getAddonInfo__doc__,

